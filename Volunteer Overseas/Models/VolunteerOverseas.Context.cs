//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Volunteer_Overseas.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class gauravEntities : DbContext
    {
        public gauravEntities()
            : base("name=gauravEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<FAQ> FAQs { get; set; }
        public virtual DbSet<Inquiry> Inquiries { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<Project_Carousel_Image> Project_Carousel_Image { get; set; }
        public virtual DbSet<Project_Cost> Project_Cost { get; set; }
        public virtual DbSet<Project_Include_Check> Project_Include_Check { get; set; }
        public virtual DbSet<Project_Start_Date> Project_Start_Date { get; set; }
        public virtual DbSet<Project_View_History> Project_View_History { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        [DbFunction("gauravEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[gauravEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual ObjectResult<csp_getLocatons_Result> csp_getLocatons(string strSearchCountry)
        {
            var strSearchCountryParameter = strSearchCountry != null ?
                new ObjectParameter("strSearchCountry", strSearchCountry) :
                new ObjectParameter("strSearchCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<csp_getLocatons_Result>("csp_getLocatons", strSearchCountryParameter);
        }
    
        public virtual ObjectResult<csp_getTypes_Result> csp_getTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<csp_getTypes_Result>("csp_getTypes");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> u_addInquiry(string name, string emailId, string message, ObjectParameter addConfirmation)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("u_addInquiry", nameParameter, emailIdParameter, messageParameter, addConfirmation);
        }
    
        public virtual ObjectResult<u_getInquiryDetail_Result> u_getInquiryDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<u_getInquiryDetail_Result>("u_getInquiryDetail");
        }
    
        public virtual ObjectResult<u_getProjectDetails_Result> u_getProjectDetails(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<u_getProjectDetails_Result>("u_getProjectDetails", projectIdParameter);
        }
    
        public virtual ObjectResult<u_getProjectsByFilter_Result> u_getProjectsByFilter(string catagoryIds, Nullable<int> countryId, Nullable<int> activityId, Nullable<System.DateTime> startDateFrom, Nullable<System.DateTime> startDateTo, Nullable<int> durationFrom, Nullable<int> durationTo, Nullable<int> minAge, Nullable<int> pageNo, Nullable<int> recordPerPage)
        {
            var catagoryIdsParameter = catagoryIds != null ?
                new ObjectParameter("CatagoryIds", catagoryIds) :
                new ObjectParameter("CatagoryIds", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("ActivityId", activityId) :
                new ObjectParameter("ActivityId", typeof(int));
    
            var startDateFromParameter = startDateFrom.HasValue ?
                new ObjectParameter("StartDateFrom", startDateFrom) :
                new ObjectParameter("StartDateFrom", typeof(System.DateTime));
    
            var startDateToParameter = startDateTo.HasValue ?
                new ObjectParameter("StartDateTo", startDateTo) :
                new ObjectParameter("StartDateTo", typeof(System.DateTime));
    
            var durationFromParameter = durationFrom.HasValue ?
                new ObjectParameter("DurationFrom", durationFrom) :
                new ObjectParameter("DurationFrom", typeof(int));
    
            var durationToParameter = durationTo.HasValue ?
                new ObjectParameter("DurationTo", durationTo) :
                new ObjectParameter("DurationTo", typeof(int));
    
            var minAgeParameter = minAge.HasValue ?
                new ObjectParameter("MinAge", minAge) :
                new ObjectParameter("MinAge", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var recordPerPageParameter = recordPerPage.HasValue ?
                new ObjectParameter("RecordPerPage", recordPerPage) :
                new ObjectParameter("RecordPerPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<u_getProjectsByFilter_Result>("u_getProjectsByFilter", catagoryIdsParameter, countryIdParameter, activityIdParameter, startDateFromParameter, startDateToParameter, durationFromParameter, durationToParameter, minAgeParameter, pageNoParameter, recordPerPageParameter);
        }
    
        public virtual ObjectResult<u_validateUser_Result> u_validateUser(string lstrUserName, string lstrPassword)
        {
            var lstrUserNameParameter = lstrUserName != null ?
                new ObjectParameter("lstrUserName", lstrUserName) :
                new ObjectParameter("lstrUserName", typeof(string));
    
            var lstrPasswordParameter = lstrPassword != null ?
                new ObjectParameter("lstrPassword", lstrPassword) :
                new ObjectParameter("lstrPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<u_validateUser_Result>("u_validateUser", lstrUserNameParameter, lstrPasswordParameter);
        }
    
        public virtual int usp_addUpdateFAQ(string fAQQuestion, string fAQAnswer, Nullable<int> sequenceNumber, Nullable<int> iD, ObjectParameter addUpdateConfirmation)
        {
            var fAQQuestionParameter = fAQQuestion != null ?
                new ObjectParameter("FAQQuestion", fAQQuestion) :
                new ObjectParameter("FAQQuestion", typeof(string));
    
            var fAQAnswerParameter = fAQAnswer != null ?
                new ObjectParameter("FAQAnswer", fAQAnswer) :
                new ObjectParameter("FAQAnswer", typeof(string));
    
            var sequenceNumberParameter = sequenceNumber.HasValue ?
                new ObjectParameter("SequenceNumber", sequenceNumber) :
                new ObjectParameter("SequenceNumber", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_addUpdateFAQ", fAQQuestionParameter, fAQAnswerParameter, sequenceNumberParameter, iDParameter, addUpdateConfirmation);
        }
    
        public virtual int usp_addUpdateOrganization(string organizationName, string emailID, string password, Nullable<int> organizationID, Nullable<byte> mode, ObjectParameter confirmation)
        {
            var organizationNameParameter = organizationName != null ?
                new ObjectParameter("OrganizationName", organizationName) :
                new ObjectParameter("OrganizationName", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("OrganizationID", organizationID) :
                new ObjectParameter("OrganizationID", typeof(int));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_addUpdateOrganization", organizationNameParameter, emailIDParameter, passwordParameter, organizationIDParameter, modeParameter, confirmation);
        }
    
        public virtual int usp_applyForProject(string fullName, Nullable<System.DateTime> projectStartDate, Nullable<int> duration, Nullable<int> projectId, string emailId, string phoneNo, ObjectParameter addConfirmation)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var projectStartDateParameter = projectStartDate.HasValue ?
                new ObjectParameter("ProjectStartDate", projectStartDate) :
                new ObjectParameter("ProjectStartDate", typeof(System.DateTime));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_applyForProject", fullNameParameter, projectStartDateParameter, durationParameter, projectIdParameter, emailIdParameter, phoneNoParameter, addConfirmation);
        }
    
        public virtual int usp_deleteOrganization(Nullable<int> organizationId, ObjectParameter deleteConfirmation)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_deleteOrganization", organizationIdParameter, deleteConfirmation);
        }
    
        public virtual int usp_deleteProject(Nullable<int> projectId, ObjectParameter deleteConfirmation)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_deleteProject", projectIdParameter, deleteConfirmation);
        }
    
        public virtual ObjectResult<usp_getActivities_Result> usp_getActivities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getActivities_Result>("usp_getActivities");
        }
    
        public virtual ObjectResult<usp_getAllApplications_Result> usp_getAllApplications(Nullable<int> organizationID)
        {
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("OrganizationID", organizationID) :
                new ObjectParameter("OrganizationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAllApplications_Result>("usp_getAllApplications", organizationIDParameter);
        }
    
        public virtual ObjectResult<usp_getAllHomePageData_Result> usp_getAllHomePageData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAllHomePageData_Result>("usp_getAllHomePageData");
        }
    
        public virtual ObjectResult<usp_getAllImagesOfProject_Result> usp_getAllImagesOfProject(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAllImagesOfProject_Result>("usp_getAllImagesOfProject", projectIdParameter);
        }
    
        public virtual ObjectResult<usp_getAllOrganizations_Result> usp_getAllOrganizations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAllOrganizations_Result>("usp_getAllOrganizations");
        }
    
        public virtual ObjectResult<usp_getAllProjects_Result> usp_getAllProjects(Nullable<int> organizationId)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAllProjects_Result>("usp_getAllProjects", organizationIdParameter);
        }
    
        public virtual ObjectResult<usp_getCountriesWithProjectCount_Result> usp_getCountriesWithProjectCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getCountriesWithProjectCount_Result>("usp_getCountriesWithProjectCount");
        }
    
        public virtual ObjectResult<usp_getFAQs_Result> usp_getFAQs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getFAQs_Result>("usp_getFAQs");
        }
    
        public virtual ObjectResult<usp_getOrganizationsDetails_Result> usp_getOrganizationsDetails(Nullable<int> organizationId)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getOrganizationsDetails_Result>("usp_getOrganizationsDetails", organizationIdParameter);
        }
    
        public virtual ObjectResult<usp_getProjectsBasedOnCost_Result> usp_getProjectsBasedOnCost()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getProjectsBasedOnCost_Result>("usp_getProjectsBasedOnCost");
        }
    
        public virtual ObjectResult<usp_getTrendingProjects_Result> usp_getTrendingProjects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getTrendingProjects_Result>("usp_getTrendingProjects");
        }
    
        public virtual int usp_updateOrganizationProfile(string organizationName, string emailID, string password, string logo, string description, string website, string contactName, Nullable<int> organizationID, Nullable<byte> mode, ObjectParameter updateConfirmation)
        {
            var organizationNameParameter = organizationName != null ?
                new ObjectParameter("OrganizationName", organizationName) :
                new ObjectParameter("OrganizationName", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("OrganizationID", organizationID) :
                new ObjectParameter("OrganizationID", typeof(int));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_updateOrganizationProfile", organizationNameParameter, emailIDParameter, passwordParameter, logoParameter, descriptionParameter, websiteParameter, contactNameParameter, organizationIDParameter, modeParameter, updateConfirmation);
        }
    
        public virtual int AddInquiry(string name, string emailId, string message, ObjectParameter addConfirmation)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddInquiry", nameParameter, emailIdParameter, messageParameter, addConfirmation);
        }
    
        public virtual ObjectResult<usp_getAllOrganizations_Result> GetOrganizations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAllOrganizations_Result>("GetOrganizations");
        }
    
        public virtual ObjectResult<usp_getAllProjects_Result> GetProjects(Nullable<int> organizationId)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAllProjects_Result>("GetProjects", organizationIdParameter);
        }
    
        public virtual ObjectResult<csp_getTypes_Result> GetCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<csp_getTypes_Result>("GetCategory");
        }
    }
}
